/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package tetris.app;

import java.awt.event.KeyEvent;
import tetris.lib.board.Difficulty;

/**
 *
 * @author IPT
 */
public class GraphicsTetrisDialog1 extends javax.swing.JDialog {

    static Difficulty level;
    static int lines;
    static int cols;

    /**
     * Creates new form TextTetrisDialog
     */
    public GraphicsTetrisDialog1(java.awt.Frame parent, boolean modal,
            Difficulty chosenLevel, int lin, int columns) {
        super(parent, modal);
        level = chosenLevel;
        lines = lin;
        cols = columns;
        initComponents();

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        board = new tetris.lib.board.TetrisGame(lines, cols, level);
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel6.setBackground(new java.awt.Color(102, 204, 255));
        jPanel6.setLayout(new java.awt.GridLayout(1, 0, 40, 20));

        jPanel9.setBackground(new java.awt.Color(102, 204, 255));
        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tetris/resources/Design sem nome - Copy.png"))); // NOI18N
        jPanel9.add(jLabel1);

        jPanel6.add(jPanel9);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        board.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boardKeyPressed(evt);
            }
        });
        jPanel1.add(board);

        jPanel6.add(jPanel1);

        jPanel8.setBackground(new java.awt.Color(102, 204, 255));
        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        jLabel2.setBackground(new java.awt.Color(102, 204, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tetris/resources/Design sem nome - Copy.png"))); // NOI18N
        jPanel8.add(jLabel2);

        jPanel6.add(jPanel8);

        getContentPane().add(jPanel6);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boardKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boardKeyPressed
        if (board.isGameOver()) {
            board.stopGame();
        }  
        else if (board.getIsGamePaused() == false) {
            switch (evt.getKeyCode()) {
                case KeyEvent.VK_LEFT -> board.moveLeft();
                case KeyEvent.VK_RIGHT -> board.moveRight();
                case KeyEvent.VK_DOWN -> {
                    board.fallDown();
                    board.setFreezedPieces(board.getFreezedPieces() + 1);
                    if (level == Difficulty.EASY) {
                        board.setCanSkipPiece(true);
                    } else if (level == Difficulty.NORMAL && board.
                            getFreezedPieces() == 5) {
                        board.setCanSkipPiece(true);
                        board.setFreezedPieces(0);
                    } else if (level == Difficulty.DIFFICULT && board.
                            getFreezedPieces() == 10) {
                        board.setCanSkipPiece(true);
                        board.setFreezedPieces(0);
                    }
                }
                case KeyEvent.VK_UP -> board.rotate();
                case KeyEvent.VK_SPACE -> board.skipPiece();
                case KeyEvent.VK_ENTER -> board.pauseOrUnpauseGame();
                default -> {
                }
            }

        } else {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                board.pauseOrUnpauseGame();
            }
        }
    }//GEN-LAST:event_boardKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info
                    : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphicsTetrisDialog1.class.
                    getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphicsTetrisDialog1.class.
                    getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphicsTetrisDialog1.class.
                    getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphicsTetrisDialog1.class.
                    getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GraphicsTetrisDialog1 dialog = new GraphicsTetrisDialog1(
                        new javax.swing.JFrame(), true, level, lines, cols);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tetris.lib.board.TetrisGame board;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    // End of variables declaration//GEN-END:variables
}
